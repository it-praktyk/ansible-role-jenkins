---
- name: Ensure dependencies are installed.
  yum:
    name:
      - curl
      - libselinux-python
      - initscripts
    state: present

- name: Ensure Jenkins repo is installed.
  get_url:
    url: "{{ jenkins_repo_def_effective }}"
    dest: /etc/yum.repos.d/jenkins.repo
  when: register_repository | bool

- name: Add Jenkins repo GPG key.
  rpm_key:
    key: "{{ jenkins_repo_key_url_effective }}"
    state: present

- name: Ensure Jenkins is installed.
  yum:
    name: jenkins
    state: "{{ jenkins_package_state }}"
    update_cache: yes
  when:
    - jenkins_version is not defined
    - jenkins_predownloaded_package_path is not defined
  notify:
    - configure default users
    - restart jenkins

- name: Get existing Jenkins version
  shell: rpm -qa | grep {{ jenkins_package_name_effective | replace(".rpm","") }} | wc -l
  args:
    warn: false
  register: jenkins_exists
  when: jenkins_version is defined
  changed_when: false

- name: Install pre-downloaded version of Jenkins.
  yum:
    name: "{{ jenkins_predownloaded_package_path }}"
    state: present
  notify:
    - configure default users
    - restart jenkins
  when: jenkins_predownloaded_package_path is defined

- name: Install specific version of Jenkins.
  block:
    - name: Install specific version of Jenkins - download a package.
      get_url:
        url: "{{ jenkins_pkg_uri_effective }}/{{ jenkins_package_name_effective }}"
        dest: "{{ '/tmp/' ~ jenkins_package_name_effective }}"

    - name: Install specific version of Jenkins - install a package.
      yum:
        name: "{{ '/tmp/' ~ jenkins_package_name_effective }}"
        state: present
      notify:
        - configure default users
        - restart jenkins
  when:
    - jenkins_version is defined
    - jenkins_exists.stdout | int == 0
    - jenkins_predownloaded_package_path is not defined
