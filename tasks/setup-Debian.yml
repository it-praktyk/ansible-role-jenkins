---
- name: Ensure dependencies are installed.
  apt:
    name:
      - curl
      - apt-transport-https
    state: present

- name: Add Jenkins apt repository key.
  apt_key:
    url: "{{ jenkins_repo_key_url_effective }}"
    state: present

- name: Add Jenkins apt repository.
  apt_repository:
    repo: "{{ jenkins_repo_def_effective }}"
    state: present
  when: register_repository | bool

- name: Ensure Jenkins is installed.
  apt:
    name: jenkins
    state: "{{ jenkins_package_state }}"
    update_cache: yes
  when: jenkins_version is not defined
  notify:
    - configure default users
    - restart jenkins

- name: Get existing Jenkins version
  shell: "dpkg --list | grep jenkins | grep {{ jenkins_version }} | wc -l"
  args:
    warn: false
  register: jenkins_exists
  when: jenkins_version is defined
  changed_when: false

- name: Install specific version of Jenkins.
  block:
    - name: Install specific version of Jenkins - download a package.
      get_url:
        url: "{{ jenkins_pkg_uri_effective }}/{{ jenkins_package_name_effective }}"
        dest: "/tmp/{{ jenkins_package_name_effective }}"
      when: jenkins_version is defined

    - name: Install specific version of Jenkins - install a package.
      apt:
        deb: "/tmp/{{ jenkins_package_name_effective }}"
        state: present
      when: jenkins_version is defined
      notify:
        - configure default users
        - restart jenkins
  when: jenkins_version is defined and jenkins_exists.stdout | int == 0
